{"version":3,"sources":["assets/fonts/BellGothicStd-Black.otf","assets/fonts/BellGothicStd-Bold.otf","assets/fonts/BellGothicStd-Light.otf","assets/fonts/Johnston100-Light.ttf","assets/fonts/Johnston100-Medium.ttf","assets/fonts/Johnston100-Regular.ttf","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Search/Search.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","App.js","serviceWorker.js","shared/utility.js","store/reducers/posts.js","index.js","components/Navigation/SideDrawer/SideDrawer.module.css","hoc/Auxiliary/Auxiliary.js","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","store/actions/actionTypes.js","store/actions/posts.js","components/Logo/Logo.module.css","assets/images/Logo_Nav.png","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","assets/therolistespodcast.xml","App.module.css"],"names":["module","exports","logo","props","className","classes","Logo","src","imgLogo","alt","navigationItem","NavigationItem","to","link","exact","activeClassName","active","children","navigationItems","NavigationItems","drawerToggle","DrawerToggle","onClick","clicked","icon","faBars","aria-hidden","search","toolbar","Toolbar","Container","DesktopOnly","drawerToggleClicked","Search","backdrop","show","Backdrop","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","closed","join","Layout","useState","sideDrawerIsVisible","setSideDrawerIsVisible","id","Home","React","lazy","Post","News","Podcast","AboutUs","withRouter","connect","dispatch","onFetchPosts","actions","useEffect","routes","path","render","type","fallback","Boolean","window","location","hostname","match","updateObject","oldObject","updatedProperties","initialState","posts","news","podcast","gondo","loading","loaded","currentPageNews","currentPagePodcast","currentCategoryPodcast","currentCategorySize","fetchPostsStart","state","action","fetchPostsSuccess","fetchPostsFailed","setCurrentPageNews","setCurrentPagePodcast","setCurrentCategoryPodcast","setCurrentCategorySize","reducer","actionTypes","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","postsReducer","store","createStore","applyMiddleware","thunk","app","StrictMode","basename","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","aux","FETCH_POSTS_START","FETCH_POSTS_SUCCESS","FETCH_POSTS_FAILED","SET_CURRENT_PAGE_NEWS","SET_CURRENT_PAGE_PODCAST","SET_CURRENT_CATEGORY_PODCAST","SET_CURRENT_CATEGORY_SIZE","pageNumber","category","size","getAttachmentURL","attachments","postMeta","attachmentId","metaKey","key","getExcerpt","content","wordLimit","filter","replace","wordsarr","split","length","excerpt","i","fetchPosts","axios","get","xmlData","response","parser","require","Parser","fetchedPosts","fetchedAttachment","fetchedNews","fetchedPodcast","fetchedGondo","parseString","data","err","result","push","currentDate","Date","publishDate","toDateString","newStr","getTime","attachmentURL","cover","sort","a","b","log"],"mappings":"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","file":"static/js/main.28e2c5ff.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/BellGothicStd-Black.9e6b41f5.otf\";","module.exports = __webpack_public_path__ + \"static/media/BellGothicStd-Bold.1f8feea2.otf\";","module.exports = __webpack_public_path__ + \"static/media/BellGothicStd-Light.66c20974.otf\";","module.exports = __webpack_public_path__ + \"static/media/Johnston100-Light.21868666.ttf\";","module.exports = __webpack_public_path__ + \"static/media/Johnston100-Medium.062a8593.ttf\";","module.exports = __webpack_public_path__ + \"static/media/Johnston100-Regular.253afa68.ttf\";","import React from 'react';\r\nimport classes from './Logo.module.css';\r\nimport imgLogo from '../../assets/images/Logo_Nav.png';\r\n\r\nconst logo = (props) => (\r\n    <div className={classes.Logo}>\r\n        <img src={imgLogo} alt=\"Logo\"/>\r\n    </div>\r\n);\r\n\r\nexport default logo;","import React from 'react';\r\nimport classes from './NavigationItem.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst navigationItem= (props) => (\r\n    <li className={classes.NavigationItem}>\r\n        <NavLink \r\n            to={props.link}\r\n            exact\r\n            activeClassName={classes.active}>{props.children}</NavLink>\r\n    </li>\r\n);\r\n\r\nexport default navigationItem;","import React from 'react';\r\nimport classes from './NavigationItems.module.css';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\n\r\nconst navigationItems= (props) => (\r\n    <ul className={classes.NavigationItems}>\r\n        <NavigationItem link=\"/news\">News</NavigationItem>\r\n        <NavigationItem link=\"/podcast\">Podcast</NavigationItem> \r\n        <NavigationItem link=\"/paris_gondo\">Paris Gondo</NavigationItem>\r\n        <NavigationItem link=\"/about_us\">About Us</NavigationItem>\r\n    </ul>\r\n);\r\n\r\nexport default navigationItems;\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport classes from './DrawerToggle.module.css';\r\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst drawerToggle = (props) => (\r\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\r\n        <FontAwesomeIcon icon={faBars} aria-hidden=\"true\"/>    \r\n    </div>\r\n);\r\n\r\nexport default drawerToggle;","import React from 'react';\r\n\r\nconst search = (props) => (\r\n    <h1></h1>\r\n)\r\n\r\nexport default search;","import React from 'react';\r\nimport classes from './Toolbar.module.css';\r\n\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\r\nimport Search from '../Search/Search';\r\nimport { Container } from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst toolbar = (props) => (\r\n    <header className={classes.Toolbar}>\r\n        <Container>            \r\n\r\n            <nav>                \r\n                <div className={classes.Logo}>\r\n                    <NavLink to=\"/\" exact>\r\n                        <Logo/>\r\n                    </NavLink>\r\n                </div>                \r\n\r\n                <div className={classes.DesktopOnly}>\r\n                    <NavigationItems/>\r\n                </div>\r\n            </nav>\r\n\r\n            <DrawerToggle clicked = {props.drawerToggleClicked}/>\r\n\r\n            <div>\r\n                <Search/>\r\n            </div>\r\n\r\n        </Container>\r\n    </header>\r\n);\r\n\r\nexport default toolbar;","import React from 'react';\r\nimport classes from './Backdrop.module.css';\r\n\r\nconst backdrop =(props) =>(\r\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\r\n);\r\n\r\nexport default backdrop;","import React from 'react';\r\nimport classes from './SideDrawer.module.css';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst sideDrawer = (props) => {\r\n\r\n    let attachedClasses = [classes.SideDrawer, classes.Close];\r\n\r\n    if (props.open) {\r\n        attachedClasses = [classes.SideDrawer, classes.Open];\r\n\r\n    }\r\n    \r\n    return (\r\n        <Aux>\r\n            <Backdrop show={props.open} clicked={props.closed}/>\r\n            <div className={attachedClasses.join(' ')} onClick={props.closed}>\r\n                \r\n                <div className={classes.Logo}>\r\n                    <NavLink to=\"/\" exact>\r\n                        <Logo/>\r\n                    </NavLink>\r\n                </div>\r\n                <nav>\r\n                    <NavigationItems />\r\n                </nav>\r\n            </div>\r\n\r\n\r\n        </Aux>\r\n    )    \r\n}\r\n\r\n\r\nexport default sideDrawer;\r\n\r\n","import React, { useState } from 'react';\r\nimport Aux from '../Auxiliary/Auxiliary';\r\nimport classes from './Layout.module.css';\r\n\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\n\r\n\r\nconst Layout = props => {\r\n\r\n    const [sideDrawerIsVisible, setSideDrawerIsVisible] = useState(false);\r\n\r\n    const sideDrawerClosedHandler = () => {\r\n        setSideDrawerIsVisible(false);\r\n    }\r\n\r\n    const sideDrawerToggleHandler = () => {\r\n        setSideDrawerIsVisible(!sideDrawerIsVisible);\r\n    }\r\n\r\n    return (\r\n        <Aux id=\"top\">\r\n            <Toolbar drawerToggleClicked = {sideDrawerToggleHandler}/>\r\n            <SideDrawer open={sideDrawerIsVisible} closed={sideDrawerClosedHandler}/>\r\n\r\n            <main>                \r\n                {props.children}           \r\n            </main>  \r\n        </Aux>\r\n    )\r\n}\r\n\r\n\r\nexport default Layout;\r\n","import React, { Suspense, useEffect } from 'react';\r\nimport Layout from './hoc/Layout/Layout';\r\nimport * as actions from './store/actions/index';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Route, Switch, withRouter } from 'react-router-dom';\r\nimport './App.module.css';\r\n\r\n\r\nconst Home = React.lazy(()=>{\r\n  return import ('./hoc/Layout/HomeLayout/HomeLayout');\r\n});\r\n\r\nconst Post = React.lazy(()=>{\r\n  return import ('./hoc/Layout/PostLayout/PostLayout');\r\n});\r\n\r\nconst News = React.lazy(()=>{\r\n  return import ('./hoc/Layout/NewsLayout/NewsLayout');\r\n});\r\n\r\nconst Podcast = React.lazy(()=>{\r\n  return import ('./hoc/Layout/PodcastLayout/PodcastLayout');\r\n});\r\n\r\nconst AboutUs = React.lazy(()=>{\r\n  return import ('./hoc/Layout/AboutUsLayout/AboutUsLayout');\r\n});\r\n\r\n\r\nconst App = props => {\r\n\r\n  const { onFetchPosts } = props;\r\n\r\n    useEffect(()=> {\r\n      onFetchPosts();      \r\n    }, []);   \r\n\r\n  let routes = (\r\n    <Switch>\r\n      <Route path=\"/news/:pageId\" render={(props) =>  <Post {...props} type=\"FULLNEWS\"/>}/> \r\n      <Route path=\"/news\" render={(props) =>  <News {...props}/>}/>\r\n      <Route path=\"/:year/:month/:day/:pageId\" render={(props) =>  <Post {...props} type=\"FULLPODCAST\"/>}/>          \r\n      <Route path=\"/podcast\" exact render={(props) =>  <Podcast {...props}/>}/>          \r\n      <Route path=\"/paris_gondo\" render={(props) =>  <Post {...props}/>}/>\r\n      <Route path=\"/about_us\" render={(props) =>  <AboutUs {...props}/>}/>\r\n      <Route path=\"/\" render={(props) =>  <Home {...props}/>}/>            \r\n    </Switch>\r\n  );\r\n\r\n  return (\r\n      <Layout>\r\n        <Suspense fallback={<p>Loading...</p>}>\r\n          {routes}          \r\n        </Suspense>        \r\n      </Layout>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n      onFetchPosts: () => dispatch (actions.fetchPosts())\r\n  };\r\n};\r\n\r\nexport default withRouter(connect(null,mapDispatchToProps)(App));\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","export const updateObject = (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    }\r\n};\r\n","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/utility';\r\n\r\n\r\nconst initialState = {\r\n    posts:[],\r\n    news:[],\r\n    podcast:[],\r\n    gondo:[],\r\n    loading: false,\r\n    loaded: false,\r\n    currentPageNews: 1,\r\n    currentPagePodcast: 1,\r\n    currentCategoryPodcast: \"podcast\",\r\n    currentCategorySize: 1\r\n};\r\n\r\nconst fetchPostsStart = (state, action) => {\r\n    return updateObject(state, {loading: true}) \r\n};\r\n\r\nconst fetchPostsSuccess = (state, action) => {\r\n    return updateObject(state,{\r\n        posts: action.posts,\r\n        news: action.news,\r\n        podcast: action.podcast,\r\n        gondo: action.gondo,\r\n        loading: false,\r\n        loaded: true\r\n    });\r\n};\r\n\r\nconst fetchPostsFailed = (state, action) => {\r\n    return updateObject(state, {loading: false})  \r\n};\r\n\r\nconst setCurrentPageNews = (state, action) => {\r\n    return updateObject(state,{\r\n        currentPageNews: action.currentPageNews\r\n    });\r\n};\r\n\r\nconst setCurrentPagePodcast = (state, action) => {\r\n    return updateObject(state,{\r\n        currentPagePodcast: action.currentPagePodcast\r\n    });\r\n};\r\n\r\nconst setCurrentCategoryPodcast = (state, action) => {\r\n    return updateObject(state,{\r\n        currentCategoryPodcast: action.currentCategoryPodcast\r\n    });\r\n};\r\n\r\nconst setCurrentCategorySize = (state, action) => {\r\n    return updateObject(state,{\r\n        currentCategorySize: action.currentCategorySize\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\nconst reducer = (state =initialState, action) => {\r\n    \r\n    switch (action.type){           \r\n\r\n        case actionTypes.FETCH_POSTS_START:\r\n            return fetchPostsStart(state, action); \r\n\r\n        case actionTypes.FETCH_POSTS_SUCCESS:      \r\n            return fetchPostsSuccess(state, action); \r\n\r\n        case actionTypes.FETCH_POSTS_FAILED:\r\n            return fetchPostsFailed(state, action); \r\n\r\n        case actionTypes.SET_CURRENT_PAGE_NEWS:\r\n            return setCurrentPageNews(state, action); \r\n\r\n        case actionTypes.SET_CURRENT_PAGE_PODCAST:\r\n            return setCurrentPagePodcast(state, action); \r\n\r\n        case actionTypes.SET_CURRENT_CATEGORY_PODCAST:\r\n            return setCurrentCategoryPodcast(state, action); \r\n\r\n        case actionTypes.SET_CURRENT_CATEGORY_SIZE:\r\n            return setCurrentCategorySize(state, action); \r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './assets/fonts/BellGothicStd-Black.otf';\r\nimport './assets/fonts/BellGothicStd-Bold.otf';\r\nimport './assets/fonts/BellGothicStd-Light.otf';\r\nimport './assets/fonts/Johnston100-Light.ttf';\r\nimport './assets/fonts/Johnston100-Medium.ttf';\r\nimport './assets/fonts/Johnston100-Regular.ttf';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport postsReducer from './store/reducers/posts'\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// const composeEnhancers = process.env.REACT_APP_NODE_ENVX === \"development\" ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\r\nconst composeEnhancers =  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n  posts: postsReducer\r\n})\r\n\r\nconst store =  createStore(rootReducer, composeEnhancers(\r\n  applyMiddleware(thunk)\r\n));\r\n\r\nconst app = (\r\n  <React.StrictMode>\r\n    <Provider store={store}> \r\n      <BrowserRouter basename=\"/the-rolistes-pod\">\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>\r\n\r\n)\r\n\r\nReactDOM.render(\r\n  app,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__1U2Xk\",\"Logo\":\"SideDrawer_Logo__2mTtT\",\"Open\":\"SideDrawer_Open__2s3Zs\",\"Close\":\"SideDrawer_Close__2VD2S\"};","const aux = (props) => props.children;\r\n\r\nexport default aux;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__2WSjl\",\"Logo\":\"Toolbar_Logo__1ddzQ\",\"DesktopOnly\":\"Toolbar_DesktopOnly__24csX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__zjSDO\",\"active\":\"NavigationItem_active__1BX_s\"};","export const FETCH_POSTS_START = 'FETCH_POSTS_START';\r\nexport const FETCH_POSTS_SUCCESS = 'FETCH_POSTS_SUCCESS';\r\nexport const FETCH_POSTS_FAILED = 'FETCH_POSTS_FAILED';\r\n\r\nexport const SET_CURRENT_PAGE_NEWS = 'SET_CURRENT_PAGE_NEWS';\r\nexport const SET_CURRENT_PAGE_PODCAST = 'SET_CURRENT_PAGE_PODCAST';\r\nexport const SET_CURRENT_CATEGORY_PODCAST = 'SET_CURRENT_CATEGORY_PODCAST';\r\nexport const SET_CURRENT_CATEGORY_SIZE = 'SET_CURRENT_CATEGORY_SIZE';","import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\nimport xmlData from '../../assets/therolistespodcast.xml';\r\n\r\n\r\nexport const fetchPostsStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_POSTS_START,\r\n    }\r\n};\r\n\r\nexport const fetchPostsSuccess = (posts, news, podcast, gondo) => {\r\n    return {\r\n        type: actionTypes.FETCH_POSTS_SUCCESS,\r\n        posts: posts,\r\n        news: news,\r\n        podcast: podcast,\r\n        gondo: gondo,\r\n        loaded: true\r\n    }\r\n};\r\n\r\nexport const fetchPostsFailed = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_POSTS_FAILED,\r\n        error: error\r\n    }\r\n};\r\n\r\nexport const setCurrentPageNews = (pageNumber) => {\r\n    return {\r\n        type: actionTypes.SET_CURRENT_PAGE_NEWS,\r\n        currentPageNews: pageNumber\r\n    \r\n    }\r\n}\r\n\r\nexport const setCurrentPagePodcast = (pageNumber) => {\r\n    return {\r\n        type: actionTypes.SET_CURRENT_PAGE_PODCAST,\r\n        currentPagePodcast: pageNumber    \r\n    }\r\n}\r\n\r\nexport const setCurrentCategoryPodcast = (category) => {\r\n    return {\r\n        type: actionTypes.SET_CURRENT_CATEGORY_PODCAST,\r\n        currentCategoryPodcast: category\r\n    }\r\n}\r\n\r\nexport const setCurrentCategorySize = (size) => {\r\n    return {\r\n        type: actionTypes.SET_CURRENT_CATEGORY_SIZE,\r\n        currentCategorySize: size    \r\n    }\r\n}\r\n\r\nconst getAttachmentURL = (attachments, postMeta) => {\r\n    \r\n    let attachmentId = 0;\r\n    \r\n    for (let metaKey in postMeta[\"wp:postmeta\"]){\r\n\r\n        if(postMeta[\"wp:postmeta\"][metaKey][\"wp:meta_key\"][0]===\"_thumbnail_id\"){\r\n            attachmentId = postMeta[\"wp:postmeta\"][metaKey][\"wp:meta_value\"][0];\r\n        }\r\n    }\r\n\r\n    for(let key in attachments){\r\n\r\n        if(attachments[key][\"wp:post_id\"][0] == attachmentId){       \r\n\r\n            return attachments[key][\"wp:attachment_url\"][0];\r\n        }\r\n    }\r\n\r\n    // return \"https://static8.depositphotos.com/1051435/932/i/950/depositphotos_9327706-stock-photo-happy-clown.jpg\";\r\n    return \"\";\r\n}\r\n\r\nconst getExcerpt = (content, wordLimit) => {\r\n     \r\n    let filter = content.replace( /(<([^>]+)>)/ig, '');\r\n    filter = filter.replace(/\\s+/g, ' ');\r\n    const wordsarr = filter.split(' ');\r\n\r\n    if(wordsarr.length < wordLimit) {\r\n        return content;\r\n    }\r\n\r\n    else {\r\n        let excerpt = \"\";\r\n\r\n        for (let i = 0; i < wordLimit; i++) {\r\n            excerpt = excerpt + \" \" + wordsarr[i] + \" \";\r\n        }\r\n\r\n        return excerpt;\r\n    }     \r\n}\r\n\r\nexport const fetchPosts = () => {\r\n\r\n    return dispatch => {\r\n        dispatch(fetchPostsStart());\r\n          \r\n        \r\n        axios.get(xmlData, {\r\n            \"Content-Type\": \"application/xml; charset=utf-8\"\r\n            })\r\n        .then((response) => {\r\n                \r\n            let xml2js = require('xml2js');\r\n            let parser = new xml2js.Parser();\r\n            \r\n            const fetchedPosts = [];\r\n            const fetchedAttachment = [];\r\n            const fetchedNews = [];\r\n            const fetchedPodcast = [];\r\n            const fetchedGondo = [];\r\n\r\n            parser.parseString(\r\n                response.data,\r\n                (err,result) => {\r\n\r\n                    for (let key in result[\"rss\"][\"channel\"][0][\"item\"]) {\r\n\r\n                        if(result[\"rss\"][\"channel\"][0][\"item\"][key][\"wp:post_type\"][0]==='attachment'){\r\n                            fetchedAttachment.push({\r\n                                ...result[\"rss\"][\"channel\"][0][\"item\"][key],\r\n                                id:key\r\n                            });\r\n                        }\r\n                        else{\r\n                            fetchedPosts.push({\r\n                                ...result[\"rss\"][\"channel\"][0][\"item\"][key],\r\n                                id:key\r\n                            });\r\n                        }\r\n                    }\r\n\r\n                    for (let key in fetchedPosts) {                                                                           \r\n         \r\n                        const currentDate = new Date();\r\n                        const publishDate = new Date(fetchedPosts[key][\"pubDate\"][0]);                       \r\n\r\n                        fetchedPosts[key][\"pubDate\"][0] = publishDate.toDateString();;\r\n\r\n                        let str= fetchedPosts[key][\"content:encoded\"][0];\r\n                        let newStr= str.replace(/\\[audio/,'<audio controls');\r\n                        newStr= newStr.replace(/mp3\\\"\\]/,'mp3\"></audio><br>');\r\n                        \r\n                        fetchedPosts[key][\"content:encoded\"][0] = newStr;                        \r\n                        \r\n                        if(fetchedPosts[key][\"category\"] && (\r\n                            fetchedPosts[key][\"wp:status\"][0] === \"publish\" || (\r\n                                fetchedPosts[key][\"wp:status\"][0] === \"future\" && currentDate.getTime() > publishDate.getTime()\r\n                                )\r\n                            )\r\n                        ){           \r\n\r\n                            const attachmentURL= getAttachmentURL(fetchedAttachment , fetchedPosts[key]);\r\n                            \r\n                            for (let i=0; i < fetchedPosts[key][\"category\"].length; i++) {\r\n                                \r\n                                switch(fetchedPosts[key][\"category\"][i][\"$\"][\"nicename\"]){\r\n\r\n                                    case \"news\": \r\n                                        const excerpt= getExcerpt(fetchedPosts[key][\"content:encoded\"][0], 40);\r\n                                        fetchedNews.push({\r\n                                        ...fetchedPosts[key],\r\n                                        cover: attachmentURL,\r\n                                        excerpt: excerpt,\r\n                                        id:key                                                \r\n                                        });                          \r\n                                        \r\n                                        break;\r\n\r\n                                    case \"podcast\": \r\n                                        fetchedPodcast.push({\r\n                                        ...fetchedPosts[key],\r\n                                        cover: attachmentURL,\r\n                                        id:key                                                \r\n                                        });\r\n\r\n                                        break;\r\n\r\n                                    case \"paris-gondo\": \r\n                                        fetchedGondo.push({\r\n                                        ...fetchedPosts[key],\r\n                                        id:key                                                \r\n                                        });\r\n                                        break;\r\n                                }\r\n                            }                                    \r\n                        }                            \r\n                    }\r\n                \r\n                    fetchedPodcast.sort((a,b)=>{\r\n                        return new Date(b[\"pubDate\"][0]) - new Date(a[\"pubDate\"][0]) \r\n                    });\r\n\r\n                    fetchedNews.sort((a,b)=>{\r\n                        return new Date(b[\"pubDate\"][0]) - new Date(a[\"pubDate\"][0]) \r\n                    });\r\n\r\n                    fetchedGondo.sort((a,b)=>{\r\n                        return new Date(b[\"pubDate\"][0]) - new Date(a[\"pubDate\"][0]) \r\n                    });\r\n                    \r\n                    console.log(fetchedAttachment);\r\n                    console.log(fetchedPosts);\r\n                    console.log(fetchedNews);\r\n                    console.log(fetchedPodcast);\r\n                    console.log(fetchedGondo);                       \r\n                }\r\n            )\r\n            \r\n            dispatch(fetchPostsSuccess(fetchedPosts, fetchedNews, fetchedPodcast, fetchedGondo));    \r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n            dispatch(fetchPostsFailed(error));\r\n        });        \r\n        \r\n       \r\n    }\r\n}    ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__3Enht\"};","module.exports = __webpack_public_path__ + \"static/media/Logo_Nav.48352255.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__27W04\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__3Ezcq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3y6h0\"};","module.exports = __webpack_public_path__ + \"static/media/therolistespodcast.640378f3.xml\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section_title\":\"App_section_title__nDdKm\",\"section_title_footer\":\"App_section_title_footer__2mOGK\",\"item_box_footer\":\"App_item_box_footer__10Imu\",\"noPadding\":\"App_noPadding___ozm9\",\"date-article\":\"App_date-article__jt-yI\",\"item_box\":\"App_item_box__3kTyz\"};"],"sourceRoot":""}