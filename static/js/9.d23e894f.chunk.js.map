{"version":3,"sources":["components/UI/Button/Button.module.css","hoc/Layout/PodcastLayout/PodcastLayout.module.css","components/UI/Button/Button.js","hoc/Layout/PodcastLayout/PodcastLayout.js"],"names":["module","exports","Button","props","className","classes","btnType","join","onClick","clicked","disabled","children","connect","state","podcast","posts","currentPagePodcast","currentCategoryPodcast","currentCategorySize","dispatch","onSetCurrentPagePodcast","pageNumber","actions","onSetCurrentCategoryPodcast","category","indexOfLastPost","indexOfFirstPost","useState","useEffect","Container","globalClasses","item_box","section_title","filters","Row","Col","xs","Posts","type","filterCategory","PaginationList","totalRecords","pageLimit","currentPage","Footer"],"mappings":"+GACAA,EAAOC,QAAU,CAAC,OAAS,yB,oBCA3BD,EAAOC,QAAU,CAAC,QAAU,iC,8FCWbC,EARA,SAACC,GAAD,OACX,4BACIC,UAAW,CAACC,IAAQH,OAAQG,IAAQF,EAAMG,UAAUC,KAAK,KACzDC,QAASL,EAAMM,QAASC,SAAUP,EAAMO,UAAWP,EAAMQ,W,yGC4FlDC,uBAhBS,SAAAC,GACpB,MAAO,CACHC,QAASD,EAAME,MAAMD,QACrBE,mBAAoBH,EAAME,MAAMC,mBAChCC,uBAAwBJ,EAAME,MAAME,uBACpCC,oBAAqBL,EAAME,MAAMG,wBAId,SAAAC,GACvB,MAAO,CACHC,wBAAyB,SAACC,GAAD,OAAgBF,EAAUG,IAA8BD,KACjFE,4BAA6B,SAACC,GAAD,OAAcL,EAAUG,IAAkCE,QAIhFZ,EAtFO,SAACT,GAEnB,IACMsB,EADc,GACItB,EAAMa,mBACxBU,EAAmBD,EAFL,GAFS,EAOiBE,mBAAS,IAP1B,6BAkB7BC,qBAAU,WACNzB,EAAMiB,wBAAwB,GAC9BjB,EAAMoB,4BAA4B,aACjC,IAeL,OACI,kBAAC,IAAD,KACI,kBAACM,EAAA,EAAD,KACI,yBAAKzB,UAAW0B,IAAcC,UAC1B,wBAAI3B,UAAW0B,IAAcE,eAA7B,WACA,yBAAK5B,UAAWC,IAAQ4B,SACpB,kBAAC,EAAD,CAAQ3B,QApCZ,SAoC8BI,UAAU,EAAOD,QAjB7C,WACdN,EAAMoB,4BAA4B,aAgBlB,OACA,kBAAC,EAAD,CAAQjB,QArCZ,SAqC8BI,UAAU,EAAOD,QAdrC,WACtBN,EAAMoB,4BAA4B,0BAalB,wBACA,kBAAC,EAAD,CAAQjB,QAtCZ,SAsC8BI,UAAU,EAAOD,QAZjC,kBAAMN,EAAMoB,4BAA4B,0BAYlD,wBACA,kBAAC,EAAD,CAAQjB,QAvCZ,SAuC8BI,UAAU,EAAOD,QAZpC,kBAAMN,EAAMoB,4BAA4B,mBAY/C,iBACA,kBAAC,EAAD,CAAQjB,QAxCZ,SAwC8BI,UAAU,EAAOD,QAZrC,kBAAMN,EAAMoB,4BAA4B,kBAY9C,iBAEJ,kBAACW,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,IACL,kBAACC,EAAA,EAAD,iBAAWlC,EAAX,CACImC,KAAK,UACLC,eAAgBpC,EAAMc,uBACtBS,iBAAkBA,EAClBD,gBAAiBA,KACrB,kBAACe,EAAA,EAAD,CAEIC,aAActC,EAAMe,oBACpBwB,UAxDR,GAyDQjC,QApCX,SAACY,GAAD,OAAgBlB,EAAMiB,wBAAwBC,IAqCnCsB,YAAaxC,EAAMa,yBAKvC,kBAAC4B,EAAA,EAAD","file":"static/js/9.d23e894f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Button_filter__VSNuE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filters\":\"PodcastLayout_filters__3TjeX\"};","import React from 'react';\r\n\r\nimport classes from './Button.module.css';\r\n\r\nconst Button = (props) => (\r\n    <button \r\n        className={[classes.Button, classes[props.btnType]].join(' ')}\r\n        onClick={props.clicked} disabled={props.disabled}>{props.children}\r\n        \r\n    </button>\r\n);\r\n\r\nexport default Button;","import React, { useEffect } from 'react';\r\nimport Aux from '../../Auxiliary/Auxiliary';\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport classes from './PodcastLayout.module.css';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport Posts from '../../../containers/Posts/Posts';\r\nimport Footer from '../../../components/Footer/Footer';\r\nimport PaginationList from '../../../components/UI/PaginationList/PaginationList';\r\nimport * as actions from '../../../store/actions/index';\r\nimport { connect } from 'react-redux';\r\nimport globalClasses from '../../../App.module.css';\r\nimport { useState } from 'react';\r\n\r\nconst PodcastLayout = (props) => {\r\n\r\n    const postPerPage = 24;\r\n    const indexOfLastPost = props.currentPagePodcast * postPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postPerPage;\r\n    \r\n    const btnType = \"filter\"; \r\n    const [disabledButtons, setdisabledButtons] = useState([]);\r\n    // setdisabledButtons({\r\n\r\n    // })\r\n    // const [formIsValid, setFormIsValid] = useState(false);\r\n    // const [formIsValid, setFormIsValid] = useState(false);\r\n    // const [formIsValid, setFormIsValid] = useState(false); \r\n    \r\n    \r\n    // need to convert this with use effect\r\n\r\n    useEffect(() => {\r\n        props.onSetCurrentPagePodcast(1);\r\n        props.onSetCurrentCategoryPodcast(\"podcast\");\r\n      }, [])\r\n\r\n    const paginate = (pageNumber) => props.onSetCurrentPagePodcast(pageNumber);\r\n    \r\n    const filterAll = () => {        \r\n        props.onSetCurrentCategoryPodcast(\"podcast\");\r\n    } \r\n\r\n    const filterRolistesPod = () => {    \r\n        props.onSetCurrentCategoryPodcast(\"the-rolistes-podcast\");   \r\n    }\r\n    const filterRolistesPresent = () => props.onSetCurrentCategoryPodcast(\"the-rolistes-present\");\r\n    const filterCafeRolistes = () => props.onSetCurrentCategoryPodcast(\"cafe-rolistes\");\r\n    const filterFilmStudies = () => props.onSetCurrentCategoryPodcast(\"film-studies\");\r\n \r\n    return (\r\n        <Aux>\r\n            <Container>\r\n                <div className={globalClasses.item_box}>\r\n                    <h1 className={globalClasses.section_title}>Podcast</h1>\r\n                    <div className={classes.filters}>\r\n                        <Button btnType={btnType} disabled={false} clicked ={filterAll}>ALL</Button>\r\n                        <Button btnType={btnType} disabled={false} clicked ={filterRolistesPod}>The Rolistes Podcast</Button>\r\n                        <Button btnType={btnType} disabled={false} clicked ={filterRolistesPresent}>The Rolistes Present</Button>\r\n                        <Button btnType={btnType} disabled={false} clicked ={filterCafeRolistes}>Cafe Rolistes</Button>\r\n                        <Button btnType={btnType} disabled={false} clicked ={filterFilmStudies}>Film Studies</Button>\r\n                    </div>                    \r\n                    <Row>\r\n                        <Col xs={12} >\r\n                            <Posts {...props} \r\n                                type=\"PODCAST\"\r\n                                filterCategory={props.currentCategoryPodcast}\r\n                                indexOfFirstPost={indexOfFirstPost} \r\n                                indexOfLastPost={indexOfLastPost}/>\r\n                            <PaginationList\r\n                                // totalRecords={props.podcast.length} \r\n                                totalRecords={props.currentCategorySize} \r\n                                pageLimit={postPerPage} \r\n                                clicked={paginate}\r\n                                currentPage={props.currentPagePodcast}/>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </Container>             \r\n            <Footer/>             \r\n        </Aux>\r\n    )    \r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        podcast: state.posts.podcast,\r\n        currentPagePodcast: state.posts.currentPagePodcast,\r\n        currentCategoryPodcast: state.posts.currentCategoryPodcast,\r\n        currentCategorySize: state.posts.currentCategorySize\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSetCurrentPagePodcast: (pageNumber) => dispatch (actions.setCurrentPagePodcast(pageNumber)),\r\n        onSetCurrentCategoryPodcast: (category) => dispatch (actions.setCurrentCategoryPodcast(category))    \r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(PodcastLayout);"],"sourceRoot":""}